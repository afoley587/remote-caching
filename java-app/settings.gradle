/*
 * This file was generated by the Gradle 'init' task.
 *
 * The settings file is used to specify which projects to include in your build.
 * For more detailed information on multi-project builds, please refer to https://docs.gradle.org/8.2.1/userguide/building_swift_projects.html in the Gradle documentation.
 */


// Download and apply the plugin
plugins {
    id("com.github.burrunan.s3-build-cache") version "1.5"
    id("org.gradle.toolchains.foojay-resolver-convention") version '0.4.0'
}

apply plugin: 'com.github.burrunan.s3-build-cache'

// Search the environment to see if this is a CI server
// Some users might not want people pushing to a remote
// cache if its shared, however, you can easily override 
// this
ext.isCiServer = System.getenv().containsKey("IS_CI")

buildCache {
    local {
        // If this is a CI server, we want to push to 
        // remote, so we can disable our local cache
        enabled = !isCiServer
    }
    remote(com.github.burrunan.s3cache.AwsS3BuildCache) {
        // Now, we can configure the gradle plugin to tell
        // it where to look for our bucket. I prefer to use
        // environment variables here so that I can switch it
        // to a new bucket without making source code changes
        region = System.getenv("CACHE_REGION")
        bucket = System.getenv("CACHE_BUCKET")
        // Personally, I like to group my caches so that different
        // users or different builds don't step on each other's toes
        prefix = 'gradlecache/' + System.getenv("CACHE_PREFIX") + "-cache/"
        push = isCiServer
        sessionToken = ''
        lookupDefaultAwsCredentials = false
    }
}

rootProject.name = 'java-app'
include('app')
